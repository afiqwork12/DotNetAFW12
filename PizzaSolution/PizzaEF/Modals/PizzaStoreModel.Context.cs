//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PizzaEF.Modals
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbPizzaStoreEntities : DbContext
    {
        public dbPizzaStoreEntities()
            : base("name=dbPizzaStoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblPizza> tblPizzas { get; set; }
    
        public virtual ObjectResult<proc_GetAllPizzas_Result> proc_GetAllPizzas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllPizzas_Result>("proc_GetAllPizzas");
        }
    
        public virtual ObjectResult<proc_GetPizzaByID_Result> proc_GetPizzaByID(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetPizzaByID_Result>("proc_GetPizzaByID", pidParameter);
        }
    
        public virtual int proc_InsertPizza(string pname, Nullable<bool> veg, Nullable<double> pprice)
        {
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var vegParameter = veg.HasValue ?
                new ObjectParameter("veg", veg) :
                new ObjectParameter("veg", typeof(bool));
    
            var ppriceParameter = pprice.HasValue ?
                new ObjectParameter("pprice", pprice) :
                new ObjectParameter("pprice", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertPizza", pnameParameter, vegParameter, ppriceParameter);
        }
    
        public virtual int proc_UpdatePizzaPrice(Nullable<int> pid, Nullable<double> pprice)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var ppriceParameter = pprice.HasValue ?
                new ObjectParameter("pprice", pprice) :
                new ObjectParameter("pprice", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UpdatePizzaPrice", pidParameter, ppriceParameter);
        }
    }
}
